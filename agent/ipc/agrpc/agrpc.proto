// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative agrpc.proto
syntax = "proto3";

package protos;
option go_package ="github.com/aliyun/aliyun_assist_client/agent/ipc/agrpc";
// The service definition.
service AssistAgent {
    rpc GenRsaKeyPair (GenRsaKeyPairReq) returns (GenRsaKeyPairResp) {}
    rpc EncryptText (EncryptReq) returns (EncryptResp) {}
    rpc DecryptText (DecryptReq) returns (DecryptResp) {}
    rpc CheckKey (CheckKeyReq) returns (CheckKeyResp) {}
}

message RespStatus {
    int32 statusCode = 1;
    string errMessage = 2;
}

message KeyInfo {
    string keyPairId = 1;
    string publicKey = 2;
    int64 createdTimestamp = 3;
    int64 expiredTimestamp = 4;
}

// GenRsaKeyPair api 
message GenRsaKeyPairReq {
    string keyPairId = 1;
    int32 timeout = 2;
}
message GenRsaKeyPairResp {
    RespStatus status = 1;
    KeyInfo keyInfo = 2;
}

// Encrypt api
message EncryptReq {
    string keyPairId = 1;
    string plainText = 2;
}
message EncryptResp {
    RespStatus status = 1;
    string cipherText = 2;
}

// Decrypt api
message DecryptReq {
    string keyPairId = 1;
    string cipherText = 2;
}
message DecryptResp {
    RespStatus status = 1;
    string plainText = 2;
}

// CheckKey api
message CheckKeyReq {
    string keyPairId = 1;
}
message CheckKeyResp {
    RespStatus status = 1;
    repeated KeyInfo keyInfos = 2;
}